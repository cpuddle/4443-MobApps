import json
from fuzzywuzzy import process
from rich import print
from initScripts.mysqlDb import MysqlDb


def find_closest_genre(unique, artist_genre_pair):
    closest_match = process.extractOne(artist_genre_pair[1], unique)
    return {"artist": artist_genre_pair[1], "genre": closest_match[0]}


# Update list B with the closest matching genres from list A
# updated_list_b = list(map(find_closest_genre, list_b))

# Print the updated list B
# for item in updated_list_b:
#     print(item)

# # List A: Primary list of genres
# list_a = ['Rock', 'Pop', 'Jazz', 'Classical', 'Hip Hop', 'Electronic', 'Blues', 'Country', 'Reggae']

# # List B: Artists paired with a genre
# list_b = [
#     {'artist': 'Artist1', 'genre': 'Rok'},
#     {'artist': 'Artist2', 'genre': 'Hop Hop'},
#     {'artist': 'Artist3', 'genre': 'Jaz'},
#     {'artist': 'Artist4', 'genre': 'Electronica'},
# ]

# # Function to find the closest matching genre from list A for each genre in list B
# def find_closest_genre(artist_genre_pair):
#     closest_match = process.extractOne(artist_genre_pair['genre'], list_a)
#     return {'artist': artist_genre_pair['artist'], 'genre': closest_match[0]}

# # Update list B with the closest matching genres from list A
# updated_list_b = list(map(find_closest_genre, list_b))

# # Print the updated list B
# for item in updated_list_b:
#     print(item)


genres = [
    (1, "Rock"),
    (2, "Pop"),
    (3, "Jazz"),
    (4, "Classical"),
    (5, "Hip Hop"),
    (6, "Electronic"),
    (7, "Blues"),
    (8, "Country"),
    (9, "Reggae"),
    (10, "Folk"),
    (11, "Metal"),
    (12, "Punk"),
    (13, "Soul"),
    (14, "Funk"),
    (15, "Disco"),
    (16, "Grunge"),
    (17, "Techno"),
    (18, "House"),
    (19, "Trance"),
    (20, "Ambient"),
    (21, "Industrial"),
    (22, "Gospel"),
    (23, "Opera"),
    (24, "Ska"),
    (25, "Emo"),
    (26, "Flamenco"),
    (27, "Bluegrass"),
    (28, "World Music"),
    (29, "Electro Swing"),
    (30, "Dubstep"),
    (31, "Drum and Bass"),
    (32, "Psychedelic"),
    (33, "Afrobeat"),
    (34, "K-Pop"),
    (35, "Latin"),
    (36, "Reggaeton"),
    (37, "Samba"),
    (38, "Bossa Nova"),
    (39, "Glitch Hop"),
    (40, "Chiptune"),
    (41, "Lo-fi"),
    (42, "Vaporwave"),
    (43, "Shoegaze"),
    (44, "Post-Rock"),
    (45, "Trip Hop"),
    (46, "Dub"),
    (47, "Garage Rock"),
    (48, "Prog Rock"),
    (49, "Synthpop"),
    (50, "Chillwave"),
    (51, "Darkwave"),
    (52, "Hardstyle"),
    (53, "Downtempo"),
    (54, "Future Bass"),
    (55, "Trap"),
    (56, "Minimal Techno"),
    (57, "Glitch"),
    (58, "New Wave"),
    (59, "Psytrance"),
    (60, "Hardcore Punk"),
    (61, "Black Metal"),
    (62, "Death Metal"),
    (63, "Gothic Metal"),
    (64, "Power Metal"),
    (65, "Doom Metal"),
    (66, "Folk Metal"),
    (67, "Celtic Music"),
    (68, "Soundtrack"),
    (69, "Ambient Techno"),
    (70, "Acid Jazz"),
    (71, "Neo-Soul"),
    (72, "Future Garage"),
    (73, "Grime"),
    (74, "UK Garage"),
    (75, "Breakbeat"),
    (76, "Hard Trance"),
    (77, "Eurodance"),
    (78, "J-Pop"),
    (79, "Visual Kei"),
    (80, "Noise Music"),
    (81, "Drone Music"),
    (82, "Zouk"),
    (83, "Bachata"),
    (84, "Merengue"),
    (85, "Klezmer"),
    (86, "Gregorian Chant"),
    (87, "Baroque"),
    (88, "Renaissance"),
    (89, "Medieval Music"),
    (90, "Shibuya-Kei"),
    (91, "Gamelan"),
    (92, "Cumbia"),
    (93, "Salsa"),
    (94, "Norteño"),
    (95, "Banda"),
    (96, "Mariachi"),
    (97, "Sertanejo"),
    (98, "Axé"),
    (99, "Forró"),
    (100, "Tropical House"),
    ("AC/DC", "Heavy Metal"),
    ("Arcade Fire", "Indie Rock"),
    ("Arctic Monkeys", "Indie Rock"),
    ("Ben Harper", "Folk Rock"),
    ("Bill Withers", "Soul"),
    ("Billy Bragg & Wilco", "Alternative Rock"),
    ("Black Sabbath", "Hard Rock"),
    ("Blitzen Trapper", "Alternative Country"),
    ("Bob Dylan", "Folk Rock"),
    ("Bob Marley", "Reggae"),
    ("Bryan Adams", "Rock"),
    ("Cat Stevens", "Folk"),
    ("Chvrches", "Synthpop"),
    ("Coldplay", "Alternative Rock"),
    ("Conor Oberst", "Indie Folk"),
    ("Dave Matthews", "Rock"),
    ("David Bowie", "Rock"),
    ("DeVotchKa", "Indie Folk"),
    ("Dispatch", "Indie Folk"),
    ("Don McLean", "Folk Rock"),
    ("Donovan", "Folk"),
    ("Elton John", "Pop Rock"),
    ("Elvis Perkins", "Folk"),
    ("Emmylou Harris", "Country"),
    ("Father John Misty", "Indie Folk"),
    ("First Aid Kit", "Folk"),
    ("Florence + The Machine", "Indie Pop"),
    ("Fun", "Indie Pop"),
    ("Gin Blossoms", "Alternative Rock"),
    ("Guns N Roses", "Hard Rock"),
    ("Harry Chapin", "Folk Rock"),
    ("Jack Johnson", "Folk Rock"),
    ("Jason Mraz", "Pop"),
    ("Jimmy Buffett", "Country Rock"),
    ("John Lennon", "Rock"),
    ("John Mellencamp", "Rock"),
    ("Johnny Cash", "Country"),
    ("Journey", "Rock"),
    ("Keane", "Alternative Rock"),
    ("Led Zeppelin", "Rock"),
    ("Lynyrd Skynyrd", "Southern Rock"),
    ("Mason Jennings", "Folk"),
    ("Metallica", "Heavy Metal"),
    ("Michael Jackson", "Pop"),
    ("Miley Cyrus", "Pop"),
    ("Neil Young", "Rock"),
    ("Nirvana ", "Grunge"),
    ("OAR", "Rock"),
    ("Oasis", "Britpop"),
    ("Of Monsters and Men", "Indie Folk"),
    ("Paul Simon", "Folk Rock"),
    ("Pink Floyd", "Rock"),
    ("Queen", "Rock"),
    ("Radiohead", "Alternative Rock"),
    ("Red Hot Chili Peppers", "Alternative Rock"),
    ("Refused", "Hardcore Punk"),
    ("Regina Spektor", "Indie Pop"),
    ("Ricky Nelson", "Rock and Roll"),
    ("She & Him", "Indie Pop"),
    ("Stealers Wheel", "Rock"),
    ("Sublime", "Ska Punk"),
    ("Taylor Swift", "Pop"),
    ("The Avett Brothers", "Folk Rock"),
    ("The Band", "Rock"),
    ("The Beatles ", "Rock"),
    ("The Black Keys", "Rock"),
    ("The Byrds", "Rock"),
    ("The Church", "Alternative Rock"),
    ("The Clash ", "Punk"),
    ("The Cure ", "Post-Punk"),
    ("The Doors ", "Psychedelic Rock"),
    ("The Eagles", "Rock"),
    ("The Killers", "Indie Rock"),
    ("The Kinks", "Rock"),
    ("The Lumineers", "Indie Folk"),
    ("The Ramones ", "Punk"),
    ("The Rolling Stones ", "Rock"),
    ("The Shins", "Indie Rock"),
    ("The Smiths ", "post-Punk"),
    ("The Stooges ", "proto-Punk"),
    ("The Strokes", "Indie Rock"),
    ("The Tallest Man on Earth", "Folk"),
    ("The Velvet Underground ", "Art Rock"),
    ("The White Stripes", "Alternative Rock"),
    ("The Who", "Hard Rock"),
    ("The Zombies", "Rock"),
    ("Tom Petty", "Rock"),
    ("Tom Waits", "Folk"),
    ("Train", "Pop Rock"),
    ("Vampire Weekend", "Indie Rock"),
    ("Van Morrison", "Rock"),
    ("Violent Femmes", "Alternative Rock"),
    ("Weezer", "Alternative Rock"),
    ("Whitesnake", "Hard Rock"),
    ("Wilco", "Alternative Rock"),
]

artists = [
    ("AC/DC", "Heavy Metal"),
    ("Arcade Fire", "Indie Rock"),
    ("Arctic Monkeys", "Indie Rock"),
    ("Ben Harper", "Folk Rock"),
    ("Bill Withers", "Soul"),
    ("Billy Bragg & Wilco", "Alternative Rock"),
    ("Black Sabbath", "Hard Rock"),
    ("Blitzen Trapper", "Alternative Country"),
    ("Bob Dylan", "Folk Rock"),
    ("Bob Marley", "Reggae"),
    ("Bryan Adams", "Rock"),
    ("Cat Stevens", "Folk"),
    ("Chvrches", "Synthpop"),
    ("Coldplay", "Alternative Rock"),
    ("Conor Oberst", "Indie Folk"),
    ("Dave Matthews", "Rock"),
    ("David Bowie", "Rock"),
    ("DeVotchKa", "Indie Folk"),
    ("Dispatch", "Indie Folk"),
    ("Don McLean", "Folk Rock"),
    ("Donovan", "Folk"),
    ("Elton John", "Pop Rock"),
    ("Elvis Perkins", "Folk"),
    ("Emmylou Harris", "Country"),
    ("Father John Misty", "Indie Folk"),
    ("First Aid Kit", "Folk"),
    ("Florence + The Machine", "Indie Pop"),
    ("Fun", "Indie Pop"),
    ("Gin Blossoms", "Alternative Rock"),
    ("Guns N Roses", "Hard Rock"),
    ("Harry Chapin", "Folk Rock"),
    ("Jack Johnson", "Folk Rock"),
    ("Jason Mraz", "Pop"),
    ("Jimmy Buffett", "Country Rock"),
    ("John Lennon", "Rock"),
    ("John Mellencamp", "Rock"),
    ("Johnny Cash", "Country"),
    ("Journey", "Rock"),
    ("Keane", "Alternative Rock"),
    ("Led Zeppelin", "Rock"),
    ("Lynyrd Skynyrd", "Southern Rock"),
    ("Mason Jennings", "Folk"),
    ("Metallica", "Heavy Metal"),
    ("Michael Jackson", "Pop"),
    ("Miley Cyrus", "Pop"),
    ("Neil Young", "Rock"),
    ("Nirvana ", "Grunge"),
    ("OAR", "Rock"),
    ("Oasis", "Britpop"),
    ("Of Monsters and Men", "Indie Folk"),
    ("Paul Simon", "Folk Rock"),
    ("Pink Floyd", "Rock"),
    ("Queen", "Rock"),
    ("Radiohead", "Alternative Rock"),
    ("Red Hot Chili Peppers", "Alternative Rock"),
    ("Refused", "Hardcore Punk"),
    ("Regina Spektor", "Indie Pop"),
    ("Ricky Nelson", "Rock and Roll"),
    ("She & Him", "Indie Pop"),
    ("Stealers Wheel", "Rock"),
    ("Sublime", "Ska Punk"),
    ("Taylor Swift", "Pop"),
    ("The Avett Brothers", "Folk Rock"),
    ("The Band", "Rock"),
    ("The Beatles ", "Rock"),
    ("The Black Keys", "Rock"),
    ("The Byrds", "Rock"),
    ("The Church", "Alternative Rock"),
    ("The Clash ", "Punk"),
    ("The Cure ", "Post-Punk"),
    ("The Doors ", "Psychedelic Rock"),
    ("The Eagles", "Rock"),
    ("The Killers", "Indie Rock"),
    ("The Kinks", "Rock"),
    ("The Lumineers", "Indie Folk"),
    ("The Ramones ", "Punk"),
    ("The Rolling Stones ", "Rock"),
    ("The Shins", "Indie Rock"),
    ("The Smiths ", "post-Punk"),
    ("The Stooges ", "proto-Punk"),
    ("The Strokes", "Indie Rock"),
    ("The Tallest Man on Earth", "Folk"),
    ("The Velvet Underground ", "Art Rock"),
    ("The White Stripes", "Alternative Rock"),
    ("The Who", "Hard Rock"),
    ("The Zombies", "Rock"),
    ("Tom Petty", "Rock"),
    ("Tom Waits", "Folk"),
    ("Train", "Pop Rock"),
    ("Vampire Weekend", "Indie Rock"),
    ("Van Morrison", "Rock"),
    ("Violent Femmes", "Alternative Rock"),
    ("Weezer", "Alternative Rock"),
    ("Whitesnake", "Hard Rock"),
    ("Wilco", "Alternative Rock"),
]

unique = []
for i in range(len(genres)):
    print(f"('{genres[i][0]}', '{genres[i][1]}'),")
    genre = genres[i][1].replace("-", " ")
    genre = genre.strip()
    genre = genre.title()
    # print(genre)
    if genre not in unique:
        unique.append(genre)


# print(len(genres))
# print(len(unique))


unique.sort()
# print(unique)

# print("INSERT INTO genre (id, name) VALUES")
# for i in range(len(unique)):
#     print(f"('{i+1}', '{unique[i]}'),")
# print(";")
for item in artists:
    matches = find_closest_genre(unique, item)

    print(matches)
